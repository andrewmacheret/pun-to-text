sudo: required

language: node_js

node_js:
  - '6'

addons:
  ssh_known_hosts: servers.andrewmacheret.com

env:
  global:
    # DOCKER_USERNAME and DOCKER_PASSWORD
    - secure: "F/b6QSyUeuwVQJkrXCv677RP0RHgX1X/aY700V64WOpBZdfZxlddPJgcmgQx0J5Jqkio4qvvhPoX49qK0rLgq97dUxnLP7o3fO7dXccbtllNEnmZlfB9rINxhEtDlnaNdy5LPQieaoTixUbCyXwqu8aWrY4VgJY2ntPZiyEhdOLPjgCxp/CVAyhwdor9k5+0EgAeVy5UxyhpxukCWnoouOM/lOtneaGY2BnlHDsgj9+UQY/INSeTHxc9qmX3Vc6RX+FW9FhzD8psIdscufYcx2XYrP5pnPCbnrw+ve9By9/7ZfOjrK9y4c1IA/GE9WEb8KC5Djt7stH0hz1a65Jcu9Wf0mYX2iPimSimE3K4PlALQjrm0n2u9MwDT8fq/cNNsShAzCTHBZfIHD99PVID+Gv//izo7S4j8M9d2kTFo214ZgWNOmizLffmMOCOUuai5WTmYnK5/tiSYhbUMQEwlmjhrPeC17vic7ogxZoqtGdammNmoMGSVlD0P6MMFFYUTxXrBbkEw1DoYr4pxU14NZnbDsSKLEyMA8u5X8EmBAKhWVYmRpFrPHLZfhKBsupPSG5WdfWTZ3clNBD9NPSGnp/y1sF/53OD7OW6EJ1se9xT0bd2FGZal47CyGsyAJ0oqIf+sToDWsHG1WuURFYBY8aXna+kG3SFxRrrwnZjHUQ="
    - secure: "MAmcrVMMtSeMb/7V0aM9lIh2yeHFIQzIYITbIT3VzuvC3lqHG6PdcieKHkV6JfCzoL1/dJ4iFJmwWPoh4EqtrdZV6NzXhf8Ic1c+vxW2knKvWHVgShUpjnWQpQMkaGtYWRlwKW4d2fkrq9NmzGSmLbtNjIVCWNpnOJZ80p3wCc6KNF/jPGNIeqduJ9TcxSn+JpVVJCCdSfOwovkniaz69VRbS8wQC3fkF4w1wmICj48Rcm6QurRg7Rwr6nbvsvqPLRiFblY63FIDvU7VUFYhKkem5Hr3GtUkeSWIcEq7sWbnIWwfF4XtYpUpC6vLgZEFuk4Dy8+N+61ExTZi0JWIW9UT+3IPTNKoHkn9lyyGny07pa0lYowm5ERfVNZkCzsIkbj8rYqpkVFILZH8AQ/uBOFAwJG95kHlcC3aVJcKfSi9d2ba85JwRAl8I+zdXvt+NMIAIztU/oeXiChFKiMMaYuQkhsI3iQsZCUpHGbSbe8G4YwZw64wmRrxrtgASLIK1HXkHQojwB/zpsUW/tovYlDRoLEcUaebUoK1G8DYR4DHUkxXGPrmFsj3XhuwY7/xdj5l0//M7iyEhtVhqChU6OQL/X0HlEVFdJaverbrUfQCVDu+07HaZOU6gb3/VXRp/Me7oDwCS75Ca8aqLVXiasNR5EQgCGrVk53vGwCgIuM="
    - SERVICE_NAME='pun-to-text'
    - CONTAINER_NAME='pun-to-text'
    - VERSION=1.0
    - TEST_PORT='9999'

services:
  - docker

install:
  # install dependencies
  - set -e
  - npm install

script:
  # build and test
  - set -e
  - docker build -t "${DOCKER_USERNAME}/${CONTAINER_NAME}":latest .
  - docker run -d --name "${CONTAINER_NAME}" -p "${TEST_PORT}":80 "${DOCKER_USERNAME}/${CONTAINER_NAME}"
  - sleep 1

  - docker exec -it "${CONTAINER_NAME}" ./send_pun.sh

  - docker rm -f "${CONTAINER_NAME}"

after_success:
  # push to docker hub
  - set -e
  - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
  - docker tag "${DOCKER_USERNAME}/${CONTAINER_NAME}":latest "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${VERSION}"
  - docker push "${DOCKER_USERNAME}/${CONTAINER_NAME}":latest
  - docker push "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${VERSION}"
  # ssh deploy
  - openssl aes-256-cbc -K $encrypted_01651092d1e4_key -iv $encrypted_01651092d1e4_iv -in id_rsa_a1-server.enc -out "${TRAVIS_BUILD_DIR}/id_rsa_a1-server" -d
  - eval "$(ssh-agent -s)"
  - chmod 600 "${TRAVIS_BUILD_DIR}/id_rsa_a1-server"
  - ssh-add "${TRAVIS_BUILD_DIR}/id_rsa_a1-server"
  - ssh a1@servers.andrewmacheret.com "cd ~/servers/a1-server && docker-compose pull ${SERVICE_NAME} && docker-compose up -d --force-recreate ${SERVICE_NAME}"
